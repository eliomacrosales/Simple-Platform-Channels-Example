// Mocks generated by Mockito 5.4.0 from annotations
// in platform_channels_dojo_example/test/features/listen_location/presentation/pages/home_page_test/mocks/test_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:platform_channels_dojo_example/core/permission/permission_handler.dart'
    as _i6;
import 'package:platform_channels_dojo_example/features/listen_location/domain/usecases/listen_changes_GPS.dart'
    as _i5;
import 'package:platform_channels_dojo_example/features/listen_location/domain/usecases/start_location.dart'
    as _i2;
import 'package:platform_channels_dojo_example/features/listen_location/domain/usecases/stop_location.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [StartLocationUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockStartLocationUseCase extends _i1.Mock
    implements _i2.StartLocationUseCase {
  @override
  _i3.Future<void> startLocation() => (super.noSuchMethod(
        Invocation.method(
          #startLocation,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [StopLocationUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockStopLocationUseCase extends _i1.Mock
    implements _i4.StopLocationUseCase {
  @override
  _i3.Future<void> stopLocation() => (super.noSuchMethod(
        Invocation.method(
          #stopLocation,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [ListenChangesGPSUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockListenChangesGPSUseCase extends _i1.Mock
    implements _i5.ListenChangesGPSUseCase {
  @override
  _i3.Stream<Map<String, double>> listenChangesGPS() => (super.noSuchMethod(
        Invocation.method(
          #listenChangesGPS,
          [],
        ),
        returnValue: _i3.Stream<Map<String, double>>.empty(),
        returnValueForMissingStub: _i3.Stream<Map<String, double>>.empty(),
      ) as _i3.Stream<Map<String, double>>);
}

/// A class which mocks [PermissionHandler].
///
/// See the documentation for Mockito's code generation for more information.
class MockPermissionHandler extends _i1.Mock implements _i6.PermissionHandler {
  @override
  _i3.Future<bool> isPermissionGranted() => (super.noSuchMethod(
        Invocation.method(
          #isPermissionGranted,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
